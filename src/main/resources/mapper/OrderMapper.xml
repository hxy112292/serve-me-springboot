<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.uta.serveme.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="edu.uta.serveme.entity.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="vendor_id" jdbcType="INTEGER" property="vendorId" />
    <result column="service_id" jdbcType="VARCHAR" property="serviceId" />
    <result column="service_type" jdbcType="VARCHAR" property="serviceType" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="date_start" jdbcType="TIMESTAMP" property="dateStart" />
    <result column="date_end" jdbcType="TIMESTAMP" property="dateEnd" />
    <result column="cost_no_off" jdbcType="DECIMAL" property="costNoOff" />
    <result column="cost_off" jdbcType="DECIMAL" property="costOff" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="edu.uta.serveme.entity.Order">
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="vendor_name" jdbcType="VARCHAR" property="vendorName" />
    <result column="vendor_phone" jdbcType="VARCHAR" property="vendorPhone" />
    <result column="star" jdbcType="INTEGER" property="star" />
  </resultMap>
  <sql id="Base_Column_List">
    `order`.id, `order`.customer_id, `order`.vendor_id, `order`.service_id, `order`.service_type, `order`.address_id,
    `order`.price, `order`.date_start, `order`.date_end, `order`.status, `order`.create_time, `order`.update_time,
    `order`.cost_no_off, `order`.cost_off, `order`.description, `order`.city
  </sql>
  <sql id="Customer_Column_List">
    customer.customer_name,
	customer.phone AS customer_phone,
	customer.address As address
  </sql>
  <sql id="Vendor_Column_List">
    vendor.username AS vendor_name,
	vendor.phone AS vendor_phone
  </sql>
  <sql id="Review_Column_List">
    r.star
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />,
    <include refid="Customer_Column_List" />,
    <include refid="Vendor_Column_List" />,
    <include refid="Review_Column_List" />
    FROM
    `order`
    LEFT JOIN (
    SELECT
    `user`.id,
    `user`.username,
    `user`.phone
    FROM
    `user`,
    `order`
    WHERE
    `user`.id = `order`.vendor_id
    GROUP BY
    `user`.id
    ) AS vendor ON `order`.vendor_id = vendor.id
    LEFT JOIN (
    SELECT
    `address`.id AS address_id,
    `address`.user_id,
    `address`.customer_name,
    `address`.phone,
    `address`.address
    FROM
    `address`,
    `order`
    WHERE
    `address`.id = `order`.address_id
    GROUP BY
    `address`.id
    ) AS customer ON `order`.address_id = customer.address_id
    LEFT JOIN (
    SELECT
    `order`.id,
    review.star
    FROM
    `order` LEFT JOIN review ON `order`.id = review.order_id
    ) AS r ON `order`.id = r.id
    WHERE
    `order`.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findOrderBySelective" parameterType="edu.uta.serveme.entity.Order" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />,
    <include refid="Customer_Column_List" />,
    <include refid="Vendor_Column_List" />,
    <include refid="Review_Column_List" />
    FROM
    `order`
    LEFT JOIN (
    SELECT
    `user`.id,
    `user`.username,
    `user`.phone
    FROM
    `user`,
    `order`
    WHERE
    `user`.id = `order`.vendor_id
    GROUP BY
    `user`.id
    ) AS vendor ON `order`.vendor_id = vendor.id
    LEFT JOIN (
    SELECT
    `address`.id AS address_id,
    `address`.user_id,
    `address`.customer_name,
    `address`.phone,
    `address`.address
    FROM
    `address`,
    `order`
    WHERE
    `address`.id = `order`.address_id
    GROUP BY
    `address`.id
    ) AS customer ON `order`.address_id = customer.address_id
    LEFT JOIN (
    SELECT
    `order`.id,
    review.star
    FROM
    `order` LEFT JOIN review ON `order`.id = review.order_id
    ) AS r ON `order`.id = r.id
    WHERE
    1 = 1
    <if test="customerId != null">
      and `order`.customer_id = #{customerId, jdbcType=INTEGER}
    </if>
    <if test="vendorId != null">
      and `order`.vendor_id = #{vendorId, jdbcType=INTEGER}
    </if>
    order by `order`.create_time desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.uta.serveme.entity.Order">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `order` (customer_id, vendor_id, service_id,
      service_type, city, address_id, 
      description, price, date_start, 
      date_end, cost_no_off, cost_off, 
      status, create_time, update_time
      )
    values (#{customerId,jdbcType=INTEGER}, #{vendorId,jdbcType=INTEGER}, #{serviceId,jdbcType=VARCHAR}, 
      #{serviceType,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{addressId,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{dateStart,jdbcType=TIMESTAMP}, 
      #{dateEnd,jdbcType=TIMESTAMP}, #{costNoOff,jdbcType=DECIMAL}, #{costOff,jdbcType=DECIMAL}, 
      #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.uta.serveme.entity.Order">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="vendorId != null">
        vendor_id,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="serviceType != null">
        service_type,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="dateStart != null">
        date_start,
      </if>
      <if test="dateEnd != null">
        date_end,
      </if>
      <if test="costNoOff != null">
        cost_no_off,
      </if>
      <if test="costOff != null">
        cost_off,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="vendorId != null">
        #{vendorId,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null">
        #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="dateStart != null">
        #{dateStart,jdbcType=TIMESTAMP},
      </if>
      <if test="dateEnd != null">
        #{dateEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="costNoOff != null">
        #{costNoOff,jdbcType=DECIMAL},
      </if>
      <if test="costOff != null">
        #{costOff,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.uta.serveme.entity.Order">
    update `order`
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="vendorId != null">
        vendor_id = #{vendorId,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null">
        service_type = #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="dateStart != null">
        date_start = #{dateStart,jdbcType=TIMESTAMP},
      </if>
      <if test="dateEnd != null">
        date_end = #{dateEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="costNoOff != null">
        cost_no_off = #{costNoOff,jdbcType=DECIMAL},
      </if>
      <if test="costOff != null">
        cost_off = #{costOff,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.uta.serveme.entity.Order">
    update `order`
    set customer_id = #{customerId,jdbcType=INTEGER},
      vendor_id = #{vendorId,jdbcType=INTEGER},
      service_id = #{serviceId,jdbcType=VARCHAR},
      service_type = #{serviceType,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      address_id = #{addressId,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      date_start = #{dateStart,jdbcType=TIMESTAMP},
      date_end = #{dateEnd,jdbcType=TIMESTAMP},
      cost_no_off = #{costNoOff,jdbcType=DECIMAL},
      cost_off = #{costOff,jdbcType=DECIMAL},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>