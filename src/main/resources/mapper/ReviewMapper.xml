<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.uta.serveme.mapper.ReviewMapper">
  <resultMap id="BaseResultMap" type="edu.uta.serveme.entity.Review">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="vendor_id" jdbcType="INTEGER" property="vendorId" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="service_id" jdbcType="INTEGER" property="serviceId" />
    <result column="star" jdbcType="INTEGER" property="star" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="CustomerMap" type="edu.uta.serveme.entity.Review">
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
  </resultMap>
  <sql id="Base_Column_List">
    review.id, review.order_id, review.vendor_id, review.customer_id, review.service_id, review.star, review.content, review.create_time, review.update_time
  </sql>
  <sql id="Base_Customer_list">
    customer.username AS customer_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from review
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findReviewBySelective" parameterType="edu.uta.serveme.entity.Review" resultMap="CustomerMap">
    select
    <include refid="Base_Column_List" />,
    <include refid="Base_Customer_list" />
    from review
    LEFT JOIN (
    SELECT
    review.id AS review_id,
    `user`.username
    FROM review, `user`
    WHERE `user`.id = review.customer_id
    ) AS customer ON customer.review_id = review.id
    where 1 = 1
    <if test="vendorId != null">
      and review.vendor_id = #{vendorId, jdbcType=INTEGER}
    </if>
    <if test="customerId != null">
      and review.customer_id = #{customerId, jdbcType=INTEGER}
    </if>
    <if test="orderId != null">
      and review.order_id = #{orderId, jdbcType=INTEGER}
    </if>
    <if test="serviceId != null">
      and review.service_id = #{serviceId, jdbcType=INTEGER}
    </if>
    order by review.create_time desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from review
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.uta.serveme.entity.Review">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into review (order_id, vendor_id, customer_id, 
      service_id, star, content, 
      create_time, update_time)
    values (#{orderId,jdbcType=INTEGER}, #{vendorId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, 
      #{serviceId,jdbcType=INTEGER}, #{star,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="edu.uta.serveme.entity.Review">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into review
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="vendorId != null">
        vendor_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="star != null">
        star,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="vendorId != null">
        #{vendorId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="star != null">
        #{star,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.uta.serveme.entity.Review">
    update review
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="vendorId != null">
        vendor_id = #{vendorId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="star != null">
        star = #{star,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.uta.serveme.entity.Review">
    update review
    set order_id = #{orderId,jdbcType=INTEGER},
      vendor_id = #{vendorId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      service_id = #{serviceId,jdbcType=INTEGER},
      star = #{star,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>